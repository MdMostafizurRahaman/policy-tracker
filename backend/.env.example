
# =============================================================================
# PolicyTracker Backend Environment Variables
# =============================================================================
# 
# IMPORTANT: 
# 1. Copy this file to .env in the same directory
# 2. Fill in your actual values (never commit .env to git)
# 3. All variables marked as REQUIRED must be set
# 4. Optional variables have default values but can be customized
#
# =============================================================================

# =============================================================================
# AI/ML API CONFIGURATION
# =============================================================================

# GROQ API for AI processing (REQUIRED)
# Get your API key from: https://console.groq.com/
GROQ_API_KEY=your-groq-api-key-here

# AWS Bedrock Configuration for TEA Scores (REQUIRED for TEA scoring feature)
# AWS credentials for Bedrock access
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_REGION=us-east-1

# Google Gemini API for additional AI features (REQUIRED)
# Get your API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB connection string (REQUIRED)
# Format: mongodb+srv://username:password@cluster.mongodb.net/database_name
MONGO_URI=mongodb+srv://username:password@your-cluster.mongodb.net/policy_tracker

# =============================================================================
# AWS S3 CONFIGURATION (REQUIRED for file uploads)
# =============================================================================

# AWS Access Key ID (REQUIRED)
# Get from AWS Console > IAM > Users > Security Credentials
AWS_ACCESS_KEY_ID=your_aws_access_key_here

# AWS Secret Access Key (REQUIRED)
# Get from AWS Console > IAM > Users > Security Credentials
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here

# AWS Region where your S3 bucket is located (REQUIRED)
# Common values: us-east-1, us-west-2, eu-west-1, ap-southeast-1
AWS_REGION=us-east-1

# S3 Bucket name for file storage (REQUIRED)
# Must be globally unique, only lowercase letters, numbers, and hyphens
AWS_S3_BUCKET=your-bucket-name-here

# CloudFront CDN Domain (OPTIONAL)
# For faster file delivery worldwide
# Example: d1234567890123.cloudfront.net
CLOUDFRONT_DOMAIN=

# =============================================================================
# EMAIL CONFIGURATION (REQUIRED for notifications)
# =============================================================================

# SMTP Server settings for sending emails
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=465
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password-here
FROM_EMAIL=your-email@gmail.com

# =============================================================================
# GOOGLE OAUTH CONFIGURATION (OPTIONAL)
# =============================================================================

# Google OAuth Client ID for social login
# Get from: https://console.developers.google.com/
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret Key for token signing (REQUIRED)
# Generate a strong random string (recommended: 64+ characters)
# You can generate one with: openssl rand -base64 64
JWT_SECRET_KEY=your-very-long-and-secure-random-string-here

# =============================================================================
# REDIS CONFIGURATION (OPTIONAL - for caching)
# =============================================================================

# Redis URL for caching (improves performance)
# Local: redis://localhost:6379/0
# Remote: redis://username:password@host:port/db
REDIS_URL=redis://localhost:6379/0
REDIS_TTL_DEFAULT=3600

# =============================================================================
# FILE UPLOAD CONFIGURATION (OPTIONAL - has defaults)
# =============================================================================

# Maximum file size in bytes (default: 50MB)
MAX_FILE_SIZE=52428800

# Allowed file types (comma-separated)
ALLOWED_FILE_TYPES=pdf,doc,docx,txt,csv,xls,xlsx,jpg,jpeg,png

# S3 Storage Organization
S3_PREFIX_UPLOADS=policy-uploads/
S3_PREFIX_PROCESSED=policy-processed/

# =============================================================================
# APPLICATION CONFIGURATION (OPTIONAL)
# =============================================================================

# Environment mode
ENVIRONMENT=development

# Enable debug mode (true/false)
DEBUG=true

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================
#
# 1. File Upload Setup:
#    - Create an S3 bucket in AWS Console
#    - Set bucket policy for public read access (if needed)
#    - Configure CORS for web uploads
#
# 2. Email Setup:
#    - For Gmail: Use App Password, not regular password
#    - Enable 2FA and generate app-specific password
#
# 3. Security Best Practices:
#    - Never commit .env file to version control
#    - Use strong, unique passwords and keys
#    - Regularly rotate access keys
#    - Use IAM roles in production instead of access keys
#
# 4. Production Deployment:
#    - Set ENVIRONMENT=production
#    - Set DEBUG=false
#    - Use environment variables instead of .env file
#    - Enable CloudFront for better performance
#
# =============================================================================
